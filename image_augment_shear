import imgaug as ia
from imgaug import augmenters as iaa
import cv2
import os
import numpy as np
from tqdm import tqdm

ia.seed(1)

# TO BE CHANGED
sourceDir = "Training_Images/"
targetDir = "Shopee_Images/Shear_Aug/"
# Define Sequence
seq = iaa.Sequential([iaa.Affine(shear=(-16, 16))])

#.split("_")[0]
categories = ["BabyBibs", "BabyHat", "BabyPants", "BabyShirt", "PackageFart", "womanshirtsleeve", "womencasualshoes",
              "womenchiffontop", "womendollshoes", "womenknittedtop", "womenlazyshoes", "womenlongsleevetop",
              "womenpeashoes", "womenplussizedtop", "womenpointedflatshoes", "womensleevelesstop",
              "womenstripedtop", "wrapsnslings"]

def run():
    # 2-level directory
    for i in os.listdir(sourceDir):
        origImages = []
        augDataSet = []
        # if os.path.exists('/Users/DanSeb/Desktop/PyCharm/Test/Shopee_npy/{}.npy'.format(i)):
        #     continue
        print("-------------------  Reading {} ------------------- ".format(i))
        if i == ".DS_Store" or i == "Thumbs.db":
            continue
        folderName = os.path.join(sourceDir, i)
        for filename in tqdm(os.listdir(folderName)):
            if filename == ".DS_Store" or filename == "Thumbs.db":
                continue
            img_path = os.path.join(folderName, filename)
            image = cv2.imread(img_path)
            if np.all(image == None):
                print(filename)
                continue
            origImages.append(image)
        print("\nNumber of images read in {}:".format(i), len(origImages))
        # np.save("{}.npy".format(i),origImages)
        saveDir = os.path.join(targetDir,i)
        print(saveDir)
        augDataSet = augmentImages(origImages)
        saveImages(saveDir, augDataSet)

def augmentImages(origImages):
    print("------------------- Augmenting Images ------------------- ")
    augDataSet = seq.augment_images(origImages)
    print("\nNumber of images augmented:", len(augDataSet))
    return augDataSet

def saveImages(saveDir, augDataset):
    print("------------------- Saving Images ------------------- ")
    for c, img in enumerate(tqdm(augDataset)):
         cv2.imwrite("{}/{}.{}".format(saveDir, c,"jpg"), img)

run()
